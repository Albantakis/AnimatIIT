#include "mex.h"
#include "math.h"
#include "matrix.h"

void decToBinary(double decimalValue, mwSize binaryValueSize, double *binaryValue);

void mexFunction(int nlhs, mxArray *plhs[], int nrhs, const mxArray *prhs[])
{
    
    double decimalValue;      
    mwSize binaryValueSize;
    
    decimalValue = mxGetScalar(prhs[0]);
    state_size_vec = mxGetPr(prhs[1]);
    state_size_vec_size = mxGetN(prhs[0]);
    
    plhs[0] = mxCreateDoubleMatrix(state_size_vec_size, 1, mxREAL);
    double* multibase_array = mxGetPr(plhs[0]);
    
    //mxArray *binaryValueArray = mxCreateDoubleMatrix(binaryValueSize, 1, mxREAL);

    decToBinary(decimalValue, state_size_vec, state_size_vec_size, multibase_array);

}

void decToBinary(double decimalValue, double* state_size_vec, mwSize state_size_vec_size, double* binaryValue)
{
    
    for(mwSize i = 0; i < state_size_vec_size; i++) {
        
        multidec_array(i) = mod(value,state_size_vec(i));
        value = floor(value/state_size_vec(i));
        
        *binaryValue = decimalValue - floor(decimalValue/2)*2;
        decimalValue = floor(decimalValue/2);
        binaryValue++;
    }
    
}